apiVersion: v1
kind: ServiceAccount
metadata:
  name: event-exporter
---
# Source: kubernetes-event-exporter/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: event-exporter
data:
  config.yaml: |
    logLevel: error
    logFormat: json
    clusterName: demo1
    route:
      routes:
        - match:
            - receiver: "dump"
    receivers:
      - name: "dump"
        elasticsearch:
          hosts:
            - "http://172.16.0.146:9200"
          index: kube-events
          indexFormat: "kube-events-{2006.01.02}"
---
# Source: kubernetes-event-exporter/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: event-exporter
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["get", "watch", "list"]
---
# Source: kubernetes-event-exporter/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
    name: event-exporter
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: event-exporter
subjects:
  - kind: ServiceAccount
    namespace: infra
    name: event-exporter
---
# Source: kubernetes-event-exporter/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: event-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: event-exporter
      app.kubernetes.io/instance: event-exporter
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "2112"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: event-exporter
        app.kubernetes.io/instance: event-exporter
    spec:
      serviceAccountName: event-exporter
      containers:
        - name: event-exporter
          image: "ghcr.io/resmoio/kubernetes-event-exporter:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: metrics
              containerPort: 2112
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics
          args:
            - -conf=/data/config.yaml
          volumeMounts:
            - mountPath: /data
              name: cfg
      volumes:
        - name: cfg
          configMap:
            name: event-exporter